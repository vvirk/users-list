{"version":3,"sources":["reducers/reducer.js","actions/actionTypes.js","actions/index.js","components/commonComponents/Btn.js","components/UsersList/UsersList.js","components/Pagination/Pagination.js","utils/setPageNumbers.js","components/commonComponents/InputText.js","components/UserForm/UserForm.js","components/Users/Users.js","App.js","serviceWorker.js","index.js"],"names":["initialState","allUsers","currentPage","totalPages","userToEdit","countTotalPages","usersArrLength","Math","ceil","reducer","state","action","type","length","_allUsers","user","usersCopy","map","id","editedState","getUrl","param","addAllUsers","Btn","handleClick","desc","onClick","UsersList","usersList","deleteUser","setUserToEdit","key","name","surname","mapDispatchToProps","setCurrentPage","connectedPagination","connect","useState","pages","setPages","useEffect","separator","pageNumbers","i","push","setPageNumbers","handleCurrentPage","page","title","index","InputText","value","handleChange","placeholder","required","onChange","UserForm","createUser","editUser","showUserForm","defaultState","newUserState","setNewUserState","handleNewUserState","userKey","e","target","handleUser","a","onSubmit","preventDefault","getAllUsers","dispatch","fetch","response","json","responseBody","console","error","userState","method","body","JSON","stringify","headers","connectedUsers","currentUsers","setCurrentUsers","isShowUserForm","setIsShowUserForm","startIndex","slice","getCurrentUsers","className","App","Boolean","window","location","hostname","match","configureStore","createStore","applyMiddleware","thunk","store","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7746fcc6.chunk.js","sourcesContent":["import * as type from '../actions/actionTypes';\n\nexport const initialState = {\n  allUsers: [],\n  currentPage: 1,\n  totalPages: 0,\n  userToEdit: null\n};\n\nconst countTotalPages = usersArrLength => usersArrLength > 5 ? Math.ceil(usersArrLength / 5) : 1;\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case type.ADD_ALL_USERS:\n      const { allUsers } = action;\n      const totalPages = countTotalPages(allUsers.length);\n\n      return { ...state, allUsers, totalPages, currentPage: totalPages <= 5 ? 1 : state.currentPage };\n    case type.ADD_NEW_USER:\n      const _allUsers = [...state.allUsers, { ...action.user }];\n\n      return { ...state, allUsers: _allUsers, totalPages: countTotalPages(_allUsers.length) }\n    case type.SET_CURRENT_PAGE:\n      return { ...state, currentPage: action.currentPage };\n    case type.SET_USER_TO_EDIT:\n      return { ...state, userToEdit: action.user };\n    case type.ADD_EDITED_STATE:\n      const usersCopy = state.allUsers.map(user => {\n        if(user.id === action.editedState.id) {\n          return { ...action.editedState}\n        } \n        return user;\n      });\n      return { ...state, allUsers: usersCopy, userToEdit: null };\n    default:\n      return state;\n  }\n};","export const ADD_ALL_USERS = 'ADD_ALL_USERS';\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nexport const ADD_NEW_USER = 'ADD_NEW_USER';\nexport const SET_USER_TO_EDIT = 'SET_USER_TO_EDIT';\nexport const ADD_EDITED_STATE = 'ADD_EDITED_STATE';","import * as type from './actionTypes';\n\nconst getUrl = param => {\n    const urlApi = 'https://cors-anywhere.herokuapp.com/77.120.241.80:8911/api/';\n    return urlApi + param;\n}\n\nexport const setCurrentPage = currentPage => ({\n    type: type.SET_CURRENT_PAGE,\n    currentPage,\n});\n\nconst addNewUser = user => ({\n    type: type.ADD_NEW_USER,\n    user,\n});\n\nexport const addAllUsers = allUsers => ({\n    type: type.ADD_ALL_USERS,\n    allUsers,\n});\n\nexport const addEditedState = editedState => ({\n  type: type.ADD_EDITED_STATE,\n  editedState,\n});\n\nexport const setUserToEdit = user => {\n    return({\n    type: type.SET_USER_TO_EDIT,\n    user,\n})};\n\nexport const getAllUsers = () => async dispatch => {\n    try {\n      const response = await fetch(getUrl('users'));\n      const responseBody = await response.json();\n      dispatch(addAllUsers(responseBody));\n    } catch (e) {\n      console.error(e);\n    }\n};\n\nexport const createUser = userState => async dispatch => {\n    try {\n      const response = await fetch(getUrl('users'), {\n        method: 'POST',\n        body: JSON.stringify(userState),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const responseBody = await response.json();\n      dispatch(addNewUser(responseBody));\n      return true;\n    } catch (e) {\n      console.error(e);\n    }\n};\n\nexport const deleteUser = id => async dispatch => {\n    try {\n      const response = await fetch(getUrl(`user/${id}`), {\n        method: 'DELETE',\n        body: id,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const responseBody = await response.json();\n      dispatch(addAllUsers(responseBody));\n    } catch (e) {\n      console.error(e);\n    }\n};\n\nexport const editUser = userState => async dispatch => {\n  try {\n    const response = await fetch(getUrl(`user/${userState.id}`), {\n      method: 'PUT',\n      body: JSON.stringify(userState),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const responseBody = await response.json();\n    dispatch(addEditedState(responseBody));\n    return true;\n  } catch (e) {\n    console.error(e);\n  }\n};","import React from 'react';\n\nexport const Btn = ({ handleClick, desc }) => <button onClick={handleClick}>{desc}</button>","import React from 'react';\n\nimport { Btn } from '../commonComponents/Btn';\n\nexport const UsersList = ({ usersList, deleteUser, setUserToEdit}) => (\n    <ul>\n        {usersList.map(user => <li key={user.id}>\n            <h3>{`${user.name} ${user.surname}`}</h3>\n            <p>{user.desc}</p>\n            <div>\n                <Btn\n                    handleClick={() => setUserToEdit(user)}\n                    desc='редагувати'\n                />\n                <Btn\n                    handleClick={() => deleteUser(user.id)}\n                    desc='видалити'\n                />\n            </div>\n        </li>)}\n    </ul>\n);","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { setCurrentPage } from '../../actions/index';\nimport { Btn } from '../commonComponents/Btn';\nimport { setPageNumbers } from '../../utils/setPageNumbers';\n\nconst Pagination = ({ totalPages, currentPage, setCurrentPage }) => {\n    const [pages, setPages] = useState();\n    const separator = '...';\n\n    useEffect(() => {\n        setPages(setPageNumbers(totalPages, currentPage, separator));\n    }, [currentPage, totalPages]);\n\n    const handleCurrentPage = page => page !== currentPage ? setCurrentPage(page) : null;\n\n    return(\n        <div>\n            {currentPage > 1 && <button onClick={() => handleCurrentPage(currentPage - 1)} title={currentPage - 1}>назад</button>}\n            <ul>\n                {pages && pages.map((page, index) => \n                    <li key={index}>\n                        {page === separator\n                            ? <span>{page}</span>\n                                : <Btn handleClick={() => handleCurrentPage(page)} desc={page} />}\n                    </li>)}\n            </ul>\n            {currentPage < totalPages && <button onClick={() => handleCurrentPage(currentPage + 1)} title={currentPage + 1}>вперед</button>}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    currentPage: state.currentPage,\n    totalPages: state.totalPages\n});\n\nconst mapDispatchToProps = {\n    setCurrentPage\n};\n\nconst connectedPagination = connect(mapStateToProps, mapDispatchToProps)(Pagination);\nexport { connectedPagination as Pagination };","export const setPageNumbers = (totalPages, currentPage, separator) => {\n    let pageNumbers = [];\n    if(totalPages < 6) {\n        for(let i = 1; i <= totalPages; i += 1) {\n            pageNumbers.push(i);\n        }\n    } else {\n        if(currentPage <= 3){\n            for(let i = 1; i <= 4; i += 1) {\n                pageNumbers.push(i);\n            }\n            pageNumbers.push(separator, totalPages);\n        } else if (currentPage > 3 && currentPage < totalPages - 2) {  \n            pageNumbers.push(1, separator, currentPage - 1, currentPage, currentPage + 1, separator, totalPages);\n        } else if (currentPage > 3 && currentPage > totalPages - 3) {\n            pageNumbers.push(1, separator);\n            for(let i = totalPages - 3; i <= totalPages; i += 1) {\n                pageNumbers.push(i);\n            }\n        }\n    }\n    return pageNumbers;\n}","import React from 'react';\n\nexport const InputText = ({ value, handleChange, placeholder}) => <input required type='text' value={value} onChange={handleChange} placeholder={placeholder} />","import React, { useState } from 'react';\n\nimport { InputText } from '../commonComponents/InputText';\n\nexport const UserForm = ({ createUser, userToEdit, editUser, showUserForm }) => {\n    const defaultState = {\n        name: '',\n        surname: '',\n        desc: ''\n    }\n    const [newUserState, setNewUserState] = useState(userToEdit ? userToEdit : defaultState);\n    const { name, surname, desc } = newUserState;\n\n    const handleNewUserState = userKey => e => {\n        setNewUserState({ ...newUserState, [userKey]: e.target.value});\n    };\n\n    const handleUser = async () => {\n        if(name && surname && desc) {\n            const isSucces = userToEdit ? await editUser(newUserState) : await createUser(newUserState);\n            if (isSucces) {\n                setNewUserState(defaultState);\n                showUserForm(false);\n            }\n        }\n    }\n\n    return(\n        <form onSubmit={e => {\n            e.preventDefault();\n            handleUser();\n        }}>\n            <InputText\n                value={name}\n                placeholder={'Введіть ім\\'я користувача'}\n                handleChange={handleNewUserState('name')}\n            />\n            <InputText\n                value={surname}\n                placeholder={'Введіть прізвище користувача'}\n                handleChange={handleNewUserState('surname')}\n            />\n\n            <InputText\n                value={desc}\n                placeholder={'Введіть опис користувача'}\n                handleChange={handleNewUserState('desc')}\n            />\n            <input type='submit' placeholder='Зберегти'/>\n        </form>\n    )\n}","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { getAllUsers, setUserToEdit, createUser, editUser, deleteUser } from '../../actions/index';\nimport { UsersList } from '../UsersList/UsersList';\nimport { Pagination } from '../Pagination/Pagination';\nimport { Btn } from '../commonComponents/Btn';\nimport { UserForm } from '../UserForm/UserForm';\n\nconst Users = ({ getAllUsers, allUsers, currentPage, totalPages, userToEdit, setUserToEdit, createUser, editUser, deleteUser }) => {\n    const [currentUsers, setCurrentUsers] = useState();\n    const [isShowUserForm, setIsShowUserForm] = useState(false);\n\n    const toggleNewUserForm = () => setIsShowUserForm(isShowUserForm ? false : true);\n\n    const handleClick = () => {\n        setUserToEdit(null);\n        toggleNewUserForm();\n    };\n\n    useEffect(() => {\n        getAllUsers();\n    }, [getAllUsers]);\n\n    useEffect(() => {\n        setIsShowUserForm(userToEdit ? true : false);\n    }, [userToEdit]);\n\n    useEffect(() => {\n        const getStartIndex = () => 5 * (currentPage - 1);\n        const getCurrentUsers = () => {\n            if (currentPage === 1) {\n                setCurrentUsers(allUsers.slice(0, 5));\n                return;\n            } else {\n                const startIndex = getStartIndex();\n                setCurrentUsers(allUsers.slice(startIndex, startIndex + 5))\n            }\n        }\n\n        allUsers && getCurrentUsers(currentPage);\n    }, [allUsers, totalPages, currentPage]);\n\n    return (\n        <div className='users'>\n            <Btn\n                handleClick={handleClick}\n                desc={'Створити нового користувачва'}\n            />\n            {isShowUserForm &&\n                <UserForm\n                    userToEdit={userToEdit}\n                    showUserForm={setIsShowUserForm}\n                    createUser={createUser}\n                    editUser={editUser}\n                />}\n            {currentUsers &&\n                <UsersList\n                    usersList={currentUsers}\n                    deleteUser={deleteUser}\n                />}\n            {totalPages > 1 && <Pagination />}\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    allUsers: state.allUsers,\n    currentPage: state.currentPage,\n    totalPages: state.totalPages,\n    userToEdit: state.userToEdit\n});\n\nconst mapDispatchToProps = {\n    getAllUsers,\n    setUserToEdit,\n    createUser,\n    editUser,\n    deleteUser\n};\n\nconst connectedUsers = connect(mapStateToProps, mapDispatchToProps)(Users);\nexport { connectedUsers as Users };","import React from 'react';\nimport './styles/App.scss';\n\nimport { Users } from './components/Users/Users';\n\nexport const App = () => {\n  return(\n  <div className=\"App\">\n    <Users />\n  </div>\n)};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducer, initialState } from './reducers/reducer';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nexport function configureStore() {\n  const store = createStore(reducer, initialState, applyMiddleware(thunk));\n  return store;\n}\nexport const store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}