{"version":3,"sources":["reducers/reducer.js","actions/actionTypes.js","actions/index.js","components/UsersList/UsersList.js","components/Pagination/Pagination.js","components/commonComponents/Btn.js","components/commonComponents/InputText.js","components/NewUserForm/NewUserForm.js","components/Users/Users.js","App.js","serviceWorker.js","index.js"],"names":["initialState","allUsers","currentPage","totalPages","editedUserState","name","surname","desc","id","countTotalPages","usersArrLength","Math","ceil","reducer","state","action","type","length","_allUsers","user","getUrl","param","addAllUsers","mapDispatchToProps","deleteUser","dispatch","a","fetch","method","body","headers","response","json","responseBody","console","error","connectedUsersList","connect","usersList","map","key","onClick","setCurrentPage","connectedPagination","useState","pages","setPages","useEffect","pageNumbers","i","push","handleCurrentPage","page","title","index","Btn","handleClick","InputText","value","handleChange","placeholder","onChange","createUser","userState","JSON","stringify","connectedNewUserForm","defaultState","newUserState","setNewUserState","handleNewUserState","userKey","e","target","handleCreateNewUser","getAllUsers","connectedUsers","currentUsers","setCurrentUsers","isShowNewUserForm","setIsShowNewUserForm","getStartIndex","startIndex","slice","getCurrentUsers","className","App","Boolean","window","location","hostname","match","configureStore","createStore","applyMiddleware","thunk","store","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.597f7ece.chunk.js","sourcesContent":["import * as type from '../actions/actionTypes';\n\nexport const initialState = {\n  allUsers: null,\n  currentPage: 1,\n  totalPages: null,\n  editedUserState: {\n    name: '',\n    surname: '',\n    desc: '',\n    id: ''\n  }\n};\n\nconst countTotalPages = usersArrLength => usersArrLength > 5 ? Math.ceil(usersArrLength / 5) : 1;\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case type.ADD_ALL_USERS:\n      const { allUsers } = action;\n      const totalPages = countTotalPages(allUsers.length);\n      return { ...state, allUsers, totalPages, currentPage: totalPages <= 5 ? 1 : state.currentPage };\n    case type.ADD_NEW_USER:\n      const _allUsers = [...state.allUsers, { ...action.user }];\n\n      return { ...state, allUsers: _allUsers, totalPages: countTotalPages(_allUsers.length) }\n    case type.SET_CURRENT_PAGE:\n      return { ...state, currentPage: action.currentPage };\n    default:\n      return state;\n  }\n};","export const ADD_ALL_USERS = 'ADD_ALL_USERS';\nexport const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nexport const ADD_NEW_USER = 'ADD_NEW_USER';","import * as type from './actionTypes';\n\nconst getUrl = param => {\n    const urlApi = 'http://77.120.241.80:8911/api/';\n    return urlApi + param;\n}\n\nexport const setCurrentPage = currentPage => ({\n    type: type.SET_CURRENT_PAGE,\n    currentPage,\n});\n\nconst addNewUser = user => ({\n    type: type.ADD_NEW_USER,\n    user,\n});\n\nexport const addAllUsers = allUsers => ({\n    type: type.ADD_ALL_USERS,\n    allUsers,\n});\n\nexport const getAllUsers = () => async dispatch => {\n    try {\n      const response = await fetch(getUrl('users'));\n      const responseBody = await response.json();\n      dispatch(addAllUsers(responseBody));\n    } catch (e) {\n      console.error(e);\n    }\n};\n\nexport const createUser = userState => async dispatch => {\n    try {\n      const response = await fetch(getUrl('users'), {\n        method: 'POST',\n        body: JSON.stringify(userState),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const responseBody = await response.json();\n      dispatch(addNewUser(responseBody));\n      return true;\n    } catch (e) {\n      console.error(e);\n    }\n};\n\nexport const deleteUser = id => async dispatch => {\n    try {\n      const response = await fetch(getUrl(`user/${id}`), {\n        method: 'DELETE',\n        body: id,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const responseBody = await response.json();\n      dispatch(addAllUsers(responseBody));\n    } catch (e) {\n      console.error(e);\n    }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { deleteUser } from '../../actions/index';\n\nconst UsersList = ({ usersList, deleteUser}) => {\n    return(<ul>\n        {usersList.map(user => <li key={user.id}>\n            <h3>{`${user.name} ${user.surname}`}</h3>\n            <p>{user.desc}</p>\n            <div>\n                <button>редагувати</button>\n                <button onClick={() => deleteUser(user.id)}>видалити</button>\n            </div>\n        </li>)}\n    </ul>);\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {\n    deleteUser\n};\n\nconst connectedUsersList = connect(mapStateToProps, mapDispatchToProps)(UsersList);\nexport { connectedUsersList as UsersList };","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { setCurrentPage } from '../../actions/index';\n\nconst Pagination = ({ totalPages, currentPage, setCurrentPage }) => {\n    const [pages, setPages] = useState();\n    const separator = '...';\n    useEffect(() => {\n    let pageNumbers = [];\n    if(totalPages < 6) {\n        for(let i = 1; i <= totalPages; i += 1) {\n            pageNumbers.push(i);\n        }\n    } else {\n        if(currentPage <= 3){\n            for(let i = 1; i <= 4; i += 1) {\n                pageNumbers.push(i);\n            }\n            pageNumbers.push(separator, totalPages);\n        } else if (currentPage > 3 && currentPage < totalPages - 2) {  \n            pageNumbers.push(1, separator, currentPage - 1, currentPage, currentPage + 1, separator, totalPages);\n        } else if (currentPage > 3 && currentPage > totalPages - 3) {\n            pageNumbers.push(1, separator);\n            for(let i = totalPages - 3; i <= totalPages; i += 1) {\n                pageNumbers.push(i);\n            }\n        }\n    }\n    setPages(pageNumbers);\n    }, [currentPage, totalPages]);\n\n    const handleCurrentPage = page => page !== currentPage ? setCurrentPage(page) : null;\n\n    return(\n        <div>\n            {currentPage > 1 && <button onClick={() => handleCurrentPage(currentPage - 1)} title={currentPage - 1}>назад</button>}\n            <ul>\n                {pages && pages.map((page, index) => \n                    <li key={index}>\n                        {page === separator\n                            ? <span>{page}</span>\n                                : <button onClick={() => handleCurrentPage(page)}>{page}</button>}\n                    </li>)}\n            </ul>\n            {currentPage < totalPages && <button onClick={() => handleCurrentPage(currentPage + 1)} title={currentPage + 1}>вперед</button>}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    currentPage: state.currentPage,\n    totalPages: state.totalPages\n});\n\nconst mapDispatchToProps = {\n    setCurrentPage\n};\n\nconst connectedPagination = connect(mapStateToProps, mapDispatchToProps)(Pagination);\nexport { connectedPagination as Pagination };","import React from 'react';\n\nexport const Btn = ({ handleClick, desc }) => <button onClick={handleClick}>{desc}</button>","import React from 'react';\n\nexport const InputText = ({ value, handleChange, placeholder}) => <input type='text' value={value} onChange={handleChange} placeholder={placeholder} />","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { InputText } from '../commonComponents/InputText';\nimport { Btn } from '../commonComponents/Btn';\nimport { createUser } from '../../actions/index';\n\nconst NewUserForm = ({ createUser }) => {\n    const defaultState = {\n        name: '',\n        surname: '',\n        desc: ''\n    }\n    const [newUserState, setNewUserState] = useState(defaultState);\n    const { name, surname, desc } = newUserState;\n\n    const handleNewUserState = userKey => e => {\n        setNewUserState({ ...newUserState, [userKey]: e.target.value});\n    };\n\n    const handleCreateNewUser = async () => {\n        if(name && surname && desc) {\n            const isSucces = await createUser(newUserState);\n            isSucces && setNewUserState(defaultState)\n        }\n    }\n    return(\n        <div>\n            <InputText\n                value={name}\n                placeholder={'Введіть ім\\'я користувача'}\n                handleChange={handleNewUserState('name')}\n            />\n            <InputText\n                value={surname}\n                placeholder={'Введіть прізвище користувача'}\n                handleChange={handleNewUserState('surname')}\n            />\n\n            <InputText\n                value={desc}\n                placeholder={'Введіть опис користувача'}\n                handleChange={handleNewUserState('desc')}\n            />\n            <Btn desc='Створити' handleClick={handleCreateNewUser} />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {\n    createUser\n};\n\nconst connectedNewUserForm = connect(mapStateToProps, mapDispatchToProps)(NewUserForm);\nexport { connectedNewUserForm as NewUserForm };","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { getAllUsers } from '../../actions/index';\nimport { UsersList } from '../UsersList/UsersList';\nimport { Pagination } from '../Pagination/Pagination';\nimport { Btn } from '../commonComponents/Btn';\nimport { NewUserForm } from '../NewUserForm/NewUserForm';\n\nconst Users = ({ getAllUsers, allUsers, currentPage, totalPages }) => {\n    const [currentUsers, setCurrentUsers] = useState();\n    const [isShowNewUserForm, setIsShowNewUserForm] = useState(false);\n\n    const getCurrentUsers = () => {\n        if (currentPage === 1) {\n            setCurrentUsers(allUsers.slice(0, 5));\n            return;\n        } else {\n            const startIndex = getStartIndex();\n            setCurrentUsers(allUsers.slice(startIndex, startIndex + 5))\n        }\n    }\n\n    const getStartIndex = () => 5 * (currentPage - 1);\n\n    const toggleNewUserForm = () => setIsShowNewUserForm(isShowNewUserForm ? false : true);\n\n    useEffect(() => {\n        getAllUsers();\n    }, []);\n\n    useEffect(() => {\n        allUsers && getCurrentUsers(currentPage);\n    }, [allUsers, totalPages, currentPage]);\n    return (\n        <div className='users'>\n            <Btn\n                handleClick={toggleNewUserForm}\n                desc={'Створити нового користувачва'}\n            />\n            {isShowNewUserForm && <NewUserForm />}\n            {currentUsers && <UsersList usersList={currentUsers} />}\n            {totalPages > 1 &&\n                <Pagination />}\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    allUsers: state.allUsers,\n    currentPage: state.currentPage,\n    totalPages: state.totalPages\n});\n\nconst mapDispatchToProps = {\n    getAllUsers\n};\n\nconst connectedUsers = connect(mapStateToProps, mapDispatchToProps)(Users);\nexport { connectedUsers as Users };","import React from 'react';\nimport './styles/App.scss';\n\nimport { Users } from './components/Users/Users';\n\nexport const App = () => {\n  return(\n  <div className=\"App\">\n    <Users />\n  </div>\n)};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducer, initialState } from './reducers/reducer';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nexport function configureStore() {\n  const store = createStore(reducer, initialState, applyMiddleware(thunk));\n  return store;\n}\nexport const store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}